% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference.R
\name{mldp_predict_multi_age}
\alias{mldp_predict_multi_age}
\title{Predict scores / probabilities of multi-age models for new data}
\usage{
mldp_predict_multi_age(data, predictors, markov_models = NULL, outcome = NULL)
}
\arguments{
\item{data}{A data frame with "id", "age", "sex" and the same features as the training data, or a MldpEHR object. The "age" field should be in years and the "sex" field should contain
1 for male and 2 for female.}

\item{predictors}{A list of predictors, one for each age group. Output of \code{mldp_mortality_multi_age_predictors} or \code{mldp_disease_multi_age_predictors}}

\item{markov_models}{A Markov model, output of \code{mldp_mortality_markov} or \code{mldp_disease_markov}. Can be NULL, and then only scores are calculated.}

\item{outcome}{A character vector indicating the outcome to calculate the life-long probabilities for. For mortality models use \code{"death"} and for disease models please use \code{c("disease", "disease_death")}. If NULL, the function would try to infer which outcome to use ("death" or "disease + disease_death") and if it fails, an it would choose the first outcome in the \code{markov$prob} data frame.}
}
\value{
a data frame with the following columns:
\itemize{
\item{id: }{unique patient id}
\item{age: }{patient age}
\item{sex: }{patient sex}
\item{model_age: }{age of the model used to predict}
\item{score: }{the predicted score for the patient}
\item{quantile: }{the quantile of the score of the patient}
\item{prob: }{the predicted life-long probability for the patient (in case \code{markov} is provided)}
}
}
\description{
Given a multi-age model, predict scores for new data. If a Markov model
is provided, life-long probabilities are calculated as well.
}
\examples{
mortality <- load_mortality_example_data(N = 100, num_age_groups = 3)
predictors <- mldp_mortality_multi_age_predictors(
    mortality@patients,
    mortality@features,
    survival_years = 5,
    nfolds = 2,
    q_thresh = 0.2,
    nthread = 2 # CRAN allows only 2 cores
)

markov <- mldp_mortality_markov(predictors, 5, qbins = seq(0, 1, by = 0.1))

new_data <- load_mortality_example_data(N = 1e3, num_age_groups = 3)
scores <- mldp_predict_multi_age(new_data, predictors, markov, "death")

# For diseases

disease_data <- load_disease_example_data(N = 100, num_age_groups = 3)

# Build predictors
predictors_disease <- mldp_disease_multi_age_predictors(
    disease_data@patients,
    disease_data@features,
    target_years = 5,
    nfolds = 2
)
markov_disease <- mldp_disease_markov(predictors_disease, 5, qbins = seq(0, 1, by = 0.1))

new_data <- load_disease_example_data(N = 1e3, num_age_groups = 3)

scores_disease <- mldp_predict_multi_age(
    new_data,
    predictors_disease,
    markov_disease,
    c("disease", "disease_death")
)

head(scores)

}
